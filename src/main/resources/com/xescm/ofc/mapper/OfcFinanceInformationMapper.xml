<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xescm.ofc.mapper.OfcFinanceInformationMapper" >
  <resultMap id="BaseResultMap" type="com.xescm.ofc.domain.OfcFinanceInformation" >
    <result column="service_charge" property="serviceCharge" jdbcType="DECIMAL" />
    <result column="order_amount" property="orderAmount" jdbcType="DECIMAL" />
    <result column="loan_amount" property="loanAmount" jdbcType="DECIMAL" />
    <result column="collect_loan_amount" property="collectLoanAmount" jdbcType="DECIMAL" />
    <result column="collect_service_charge" property="collectServiceCharge" jdbcType="DECIMAL" />
    <result column="collect_flag" property="collectFlag" jdbcType="VARCHAR" />
    <result column="count_flag" property="countFlag" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    service_charge, order_amount, loan_amount, collect_loan_amount, collect_service_charge, 
    collect_flag, count_flag
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xescm.ofc.domain.OfcFinanceInformationExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ofc_finance_information
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.xescm.ofc.domain.OfcFinanceInformationExample" >
    delete from ofc_finance_information
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xescm.ofc.domain.OfcFinanceInformation" >
    insert into ofc_finance_information (service_charge, order_amount, loan_amount, 
      collect_loan_amount, collect_service_charge, 
      collect_flag, count_flag)
    values (#{serviceCharge,jdbcType=DECIMAL}, #{orderAmount,jdbcType=DECIMAL}, #{loanAmount,jdbcType=DECIMAL}, 
      #{collectLoanAmount,jdbcType=DECIMAL}, #{collectServiceCharge,jdbcType=DECIMAL}, 
      #{collectFlag,jdbcType=VARCHAR}, #{countFlag,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xescm.ofc.domain.OfcFinanceInformation" >
    insert into ofc_finance_information
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="serviceCharge != null" >
        service_charge,
      </if>
      <if test="orderAmount != null" >
        order_amount,
      </if>
      <if test="loanAmount != null" >
        loan_amount,
      </if>
      <if test="collectLoanAmount != null" >
        collect_loan_amount,
      </if>
      <if test="collectServiceCharge != null" >
        collect_service_charge,
      </if>
      <if test="collectFlag != null" >
        collect_flag,
      </if>
      <if test="countFlag != null" >
        count_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="serviceCharge != null" >
        #{serviceCharge,jdbcType=DECIMAL},
      </if>
      <if test="orderAmount != null" >
        #{orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="loanAmount != null" >
        #{loanAmount,jdbcType=DECIMAL},
      </if>
      <if test="collectLoanAmount != null" >
        #{collectLoanAmount,jdbcType=DECIMAL},
      </if>
      <if test="collectServiceCharge != null" >
        #{collectServiceCharge,jdbcType=DECIMAL},
      </if>
      <if test="collectFlag != null" >
        #{collectFlag,jdbcType=VARCHAR},
      </if>
      <if test="countFlag != null" >
        #{countFlag,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xescm.ofc.domain.OfcFinanceInformationExample" resultType="java.lang.Integer" >
    select count(*) from ofc_finance_information
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ofc_finance_information
    <set >
      <if test="record.serviceCharge != null" >
        service_charge = #{record.serviceCharge,jdbcType=DECIMAL},
      </if>
      <if test="record.orderAmount != null" >
        order_amount = #{record.orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.loanAmount != null" >
        loan_amount = #{record.loanAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.collectLoanAmount != null" >
        collect_loan_amount = #{record.collectLoanAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.collectServiceCharge != null" >
        collect_service_charge = #{record.collectServiceCharge,jdbcType=DECIMAL},
      </if>
      <if test="record.collectFlag != null" >
        collect_flag = #{record.collectFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.countFlag != null" >
        count_flag = #{record.countFlag,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ofc_finance_information
    set service_charge = #{record.serviceCharge,jdbcType=DECIMAL},
      order_amount = #{record.orderAmount,jdbcType=DECIMAL},
      loan_amount = #{record.loanAmount,jdbcType=DECIMAL},
      collect_loan_amount = #{record.collectLoanAmount,jdbcType=DECIMAL},
      collect_service_charge = #{record.collectServiceCharge,jdbcType=DECIMAL},
      collect_flag = #{record.collectFlag,jdbcType=VARCHAR},
      count_flag = #{record.countFlag,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>